
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Diliru
 */
public class Admin_Return_Books extends javax.swing.JFrame {

    
    String stringFine;
    String MemberID;
    String bookID;
    /**
     * Creates new form Return_JFrame
     */
    public Admin_Return_Books() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblClose = new javax.swing.JLabel();
        lblMinimize = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnOkay = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblDueDate = new javax.swing.JLabel();
        txtDueDate = new javax.swing.JTextField();
        lblBookID = new javax.swing.JLabel();
        txtBookID = new javax.swing.JTextField();
        btnReturn = new javax.swing.JButton();
        lblFine = new javax.swing.JLabel();
        txtFine = new javax.swing.JTextField();
        btnPayFine = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(248, 148, 6));

        lblTitle.setText("return Books");

        lblClose.setText("X");
        lblClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseMouseClicked(evt);
            }
        });

        lblMinimize.setText("-");
        lblMinimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMinimizeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblMinimize)
                .addGap(18, 18, 18)
                .addComponent(lblClose)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTitle)
                        .addComponent(lblClose))
                    .addComponent(lblMinimize, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(44, 62, 80));

        btnOkay.setText("Okay");
        btnOkay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOkayMouseClicked(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelMouseClicked(evt);
            }
        });

        lblDueDate.setForeground(new java.awt.Color(255, 255, 255));
        lblDueDate.setText("Due Date");

        txtDueDate.setEditable(false);

        lblBookID.setForeground(new java.awt.Color(255, 255, 255));
        lblBookID.setText("Enter Book Id");

        btnReturn.setText("Return");
        btnReturn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReturnMouseClicked(evt);
            }
        });

        lblFine.setForeground(new java.awt.Color(255, 255, 255));
        lblFine.setText("Fine");

        txtFine.setEditable(false);
        txtFine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFineActionPerformed(evt);
            }
        });

        btnPayFine.setText("Pay Fine");
        btnPayFine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPayFineMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnReturn))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBookID)
                            .addComponent(btnCancel))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(1, 202, Short.MAX_VALUE)
                                .addComponent(btnOkay))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addComponent(txtBookID))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDueDate)
                            .addComponent(lblFine))
                        .addGap(146, 146, 146)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDueDate)
                            .addComponent(txtFine)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnPayFine)))))
                .addGap(46, 46, 46))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBookID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBookID))
                .addGap(18, 18, 18)
                .addComponent(btnReturn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDueDate)
                    .addComponent(txtDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFine)
                    .addComponent(txtFine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPayFine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOkay)
                    .addComponent(btnCancel))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_lblCloseMouseClicked

    private void lblMinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizeMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_lblMinimizeMouseClicked

    private void btnOkayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOkayMouseClicked

        Admin_home admin= new Admin_home();
        admin.setVisible(true);
        admin.pack();
        admin.setLocationRelativeTo(null);
        admin.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_btnOkayMouseClicked

    private void btnCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseClicked
        txtBookID.setText("");
        txtDueDate.setText("");
        txtFine.setText("");
    }//GEN-LAST:event_btnCancelMouseClicked

    private void btnReturnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReturnMouseClicked

       bookID = txtBookID.getText();
        

        int num;

        if(bookID.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please enter the ID 0f the book");
        }
        

        else{
        PreparedStatement ps;
        ResultSet rs;


        String query="SELECT * FROM `lended_books` WHERE `book_id` =?";

        try {
            ps=MyConnection.getConnetction().prepareStatement(query);

            ps.setString(1, bookID);

            rs = ps.executeQuery();

            if(rs.next()){
                
                String dueDate = rs.getString("due_date");
                MemberID=rs.getString("member_id");
                        
                        
                LocalDate today = LocalDate.now( ZoneId.of( "Asia/Colombo" ) ) ;
                String todayDate = today.toString() ;
                
                 DateFormat format = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
                 
                 java.util.Date curDate = format.parse(todayDate);
                 java.util.Date dateDue = format.parse(dueDate);
                
                int diffInDays = (int)( (curDate.getTime() - dateDue.getTime()) 
                 / (1000 * 60 * 60 * 24) );
                
                if(diffInDays>0){
                
                
                int fine=diffInDays*5;
                stringFine= Integer.toString(fine);
                
                
                JOptionPane.showMessageDialog(null,"You have a fine of Rs."+stringFine+" to pay");
                
                txtDueDate.setText(dueDate);   
                txtFine.setText(stringFine);      
                
                }
                else{
                
                String querymt="UPDATE `books` SET `book_status`=? WHERE `book_id`= '"+bookID+"'";
        
                    PreparedStatement pstmt = null;
                    try { 
                
                     pstmt = MyConnection.getConnetction().prepareStatement(querymt);
                     pstmt.setString(1, "available");
                     pstmt.executeUpdate();
               
                    } catch (SQLException ex) {
                    Logger.getLogger(Admin_Search_Book_Details.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                    
                    
                    
                    PreparedStatement pst;
                    ResultSet rst;

                    

                    String queryt="SELECT * FROM `the_app_users` WHERE `u_id` =?";

                    try {
                        pst=MyConnection.getConnetction().prepareStatement(queryt);

                        pst.setString(1, MemberID);

                        rst = pst.executeQuery();

                    if(rst.next()){
                        String b_Books=rst.getString("borrowed_books");
                        
                        int num3 = Integer.parseInt(b_Books);
                        
                        int num2=num3-1;
                        
                        String borrow= Integer.toString(num2);
                        
                        String querytt="UPDATE `the_app_users` SET `borrowed_books`=? WHERE `u_id`= '"+MemberID+"'";
        
                    PreparedStatement psttt = null;
                    try { 
                
                     psttt = MyConnection.getConnetction().prepareStatement(querytt);
                     psttt.setString(1, borrow);
                     psttt.executeUpdate();
               
                    } catch (SQLException ex) {
                    Logger.getLogger(Admin_Search_Book_Details.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                

            }
            else{
                JOptionPane.showMessageDialog(null,"This user is not available");
            }

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
                    
                    
               
       String query11="DELETE FROM `lended_books` WHERE `book_id` =?";
        
        PreparedStatement pstmt11 ;
            try { 
                //String ID1=txtMemberId.getText();
                
                pstmt11 = MyConnection.getConnetction().prepareStatement(query11);
                pstmt11.setString(1, bookID);
                int i = pstmt11.executeUpdate();
                if(i>0){
                    
                    JOptionPane.showMessageDialog(null,"The bokk is returned");
                    
                    
                    
                }
               
               else{
                    JOptionPane.showMessageDialog(null,"Something is wrong!!");
                }
                
            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(Admin_Search_Book_Details.class.getName()).log(Level.SEVERE, null, ex);
            }   
                
                
                }
                

            }
            else{
                JOptionPane.showMessageDialog(null,"This book is not lended");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }   catch (ParseException ex) {
                Logger.getLogger(Admin_Return_Books.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        
        
        
        
        }

    }//GEN-LAST:event_btnReturnMouseClicked

    private void txtFineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFineActionPerformed

    private void btnPayFineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPayFineMouseClicked
    
    int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Do you get the payment?", "Pay Fines", dialogButton);
        if(dialogResult == 0) {
      
    FileWriter fr;
        try {
            fr = new FileWriter("Member "+MemberID+" Fine Payment for late submission of the book "+bookID+" .txt");
            BufferedWriter br = new BufferedWriter(fr);
            br.write("Member ID = "+MemberID);
            br.write("\n");
            br.write("Book ID = "+bookID);
            br.write("\n");
            br.write("Fine Payments = Rs."+stringFine);
            br.close();
            fr.close();}
        
    
    catch (IOException ex) {
            Logger.getLogger(Admin_Return_Books.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
        
                
                    String querymt="UPDATE `books` SET `book_status`=? WHERE `book_id`= '"+bookID+"'";
        
                    PreparedStatement pstmt = null;
                    try { 
                
                     pstmt = MyConnection.getConnetction().prepareStatement(querymt);
                     pstmt.setString(1, "available");
                     pstmt.executeUpdate();
               
                    } catch (SQLException ex) {
                    Logger.getLogger(Admin_Search_Book_Details.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                    
                    
                    
                    PreparedStatement pst;
                    ResultSet rst;

                    

                    String queryt="SELECT * FROM `the_app_users` WHERE `u_id` =?";

                    try {
                        pst=MyConnection.getConnetction().prepareStatement(queryt);

                        pst.setString(1, MemberID);

                        rst = pst.executeQuery();

                    if(rst.next()){
                        String b_Books=rst.getString("borrowed_books");
                        
                        int num3 = Integer.parseInt(b_Books);
                        
                        int num2=num3-1;
                        
                        String borrow= Integer.toString(num2);
                        
                        String querytt="UPDATE `the_app_users` SET `borrowed_books`=? WHERE `u_id`= '"+MemberID+"'";
        
                    PreparedStatement psttt = null;
                    try { 
                
                     psttt = MyConnection.getConnetction().prepareStatement(querytt);
                     psttt.setString(1, borrow);
                     psttt.executeUpdate();
               
                    } catch (SQLException ex) {
                    Logger.getLogger(Admin_Search_Book_Details.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                

            }
            else{
                JOptionPane.showMessageDialog(null,"This user is not available");
            }

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
                    
                    
               
       String query11="DELETE FROM `lended_books` WHERE `book_id` =?";
        
        PreparedStatement pstmt11 ;
            try { 
                //String ID1=txtMemberId.getText();
                
                pstmt11 = MyConnection.getConnetction().prepareStatement(query11);
                pstmt11.setString(1, bookID);
                int i = pstmt11.executeUpdate();
                if(i>0){
                    
                    JOptionPane.showMessageDialog(null,"The bokk is returned");
                    
                    
                    
                }
               
               else{
                    JOptionPane.showMessageDialog(null,"Something is wrong!!");
                }
                
            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(Admin_Search_Book_Details.class.getName()).log(Level.SEVERE, null, ex);
            }              
            
                    
               
             
                
                
        
        
        
        
        
        
        
        
        
        
        JOptionPane.showMessageDialog(null,"Payments recieved");
        
        txtBookID.setText("");
        txtDueDate.setText("");
        txtFine.setText("");
        
        }
        
    }//GEN-LAST:event_btnPayFineMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin_Return_Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin_Return_Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin_Return_Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_Return_Books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin_Return_Books().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOkay;
    private javax.swing.JButton btnPayFine;
    private javax.swing.JButton btnReturn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblBookID;
    private javax.swing.JLabel lblClose;
    private javax.swing.JLabel lblDueDate;
    private javax.swing.JLabel lblFine;
    private javax.swing.JLabel lblMinimize;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtBookID;
    private javax.swing.JTextField txtDueDate;
    private javax.swing.JTextField txtFine;
    // End of variables declaration//GEN-END:variables
}
